{
  "editor.suggestSelection": "first",
  "editor.tabSize": 2,
  "files.trimTrailingWhitespace": true,
  "git.confirmSync": false,
  "git.autofetch": true,
  "git.openRepositoryInParentFolders": "always",
  "explorer.confirmDelete": false,
  "extensions.ignoreRecommendations": true,
  "window.titleBarStyle": "custom",
  "editor.formatOnSave": true,
  "editor.formatOnPaste": true,
  "explorer.confirmDragAndDrop": false,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "javascript.updateImportsOnFileMove.enabled": "always",
  "security.allowedUNCHosts": ["wsl.localhost"],
  "editor.wordWrap": "on",
  "window.customTitleBarVisibility": "auto",
  "editor.fontLigatures": false,
  "remote.SSH.remotePlatform": {
    "control-tower": "linux",
    "sam-dev-instance": "linux",
    "dev-mqtt-data-pipeline": "linux",
    "OCI-data-server": "linux",
    "mqtt-server": "linux",
    "deploy-mqtt-server": "linux"
  },
  "diffEditor.renderSideBySide": true,
  "cSpell.userWords": [
    "datetime",
    "lucide",
    "neondatabase",
    "ORPC",
    "ptlbuilder",
    "sonner",
    "svix",
    "tailwindcss",
    "tanstack",
    "turso",
    "unnest",
    "varchar"
  ],
  "workbench.tree.indent": 24,
  "workbench.editor.tabSizing": "shrink",
  "workbench.editor.limit.enabled": true,
  "workbench.editor.editorActionsLocation": "hidden",
  "editor.suggest.showStatusBar": true,
  "editor.mouseWheelScrollSensitivity": 2,
  "workbench.startupEditor": "none",
  "workbench.panel.showLabels": false,
  "workbench.settings.applyToAllProfiles": [
    "workbench.colorCustomizations",
    "editor.fontFamily"
  ],
  "database-client.autoSync": true,
  "terminal.integrated.hideOnStartup": "whenEmpty",
  "editor.cursorWidth": 2,
  "editor.cursorBlinking": "solid",
  "go.toolsManagement.autoUpdate": true,
  "editor.fontSize": 18,
  "terminal.integrated.fontSize": 18,
  "editor.minimap.sectionHeaderFontSize": 8,
  "explorer.confirmPasteNative": false,
  "notebook.confirmDeleteRunningCell": false,
  "editor.minimap.showSlider": "always",
  "workbench.editorAssociations": {
    "*.gz": "default"
  },
  "editor.unicodeHighlight.invisibleCharacters": false,
  "editor.fontFamily": "FantasqueSansM Nerd Font, Iosevka Nerd Font, Geist Mono, CaskaydiaMono Nerd Font, BlexMono Nerd Font, JetBrainsMono Nerd Font, Agave Nerd Font, AnonymousPro Nerd Font, FiraCode Nerd Font, ZedMono Nerd Font,  monospace",
  "workbench.navigationControl.enabled": false,
  "window.commandCenter": false,
  "vim.smartRelativeLine": true,
  "todohighlight.keywords": ["TODO", "FIXME", "BUG", "NOTE", "HACK"],
  "javascript.preferences.importModuleSpecifier": "non-relative",
  "typescript.preferences.importModuleSpecifier": "non-relative",
  "workbench.fontAliasing": "antialiased",
  "importCost.fontStyle": "italic",
  "window.confirmSaveUntitledWorkspace": false,
  "security.workspace.trust.untrustedFiles": "open",
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "workbench.iconTheme": "Monokai Pro (Filter Octagon) Icons",
  "cursor.cpp.disabledLanguages": ["plaintext", "markdown", "scminput"],
  "workbench.layoutControl.enabled": false,
  "workbench.colorTheme": "Catppuccin Mocha",
  "custom-ui-style.stylesheet": {
    // font family stuff
    // "* ": "font-family: Geist Mono, JetBrainsMono Nerd Font,  FantasqueSansM Nerd Font, Iosevka Nerd Font,  CaskaydiaMono Nerd Font, BlexMono Nerd Font,  Agave Nerd Font, AnonymousPro Nerd Font, FiraCode Nerd Font, ZedMono Nerd Font, monospace !important",
    // "body": "font-family: Geist Mono, JetBrainsMono Nerd Font,  FantasqueSansM Nerd Font, Iosevka Nerd Font,  CaskaydiaMono Nerd Font, BlexMono Nerd Font,  Agave Nerd Font, AnonymousPro Nerd Font, FiraCode Nerd Font, ZedMono Nerd Font, monospace !important",
    // ".monaco-workbench": "font-family: Geist Mono, JetBrainsMono Nerd Font,  FantasqueSansM Nerd Font, Iosevka Nerd Font,  CaskaydiaMono Nerd Font, BlexMono Nerd Font,  Agave Nerd Font, AnonymousPro Nerd Font, FiraCode Nerd Font, ZedMono Nerd Font, monospace !important",
    // ".monaco-workbench *": "font-family: inherit !important",
    // ".part *": "font-family: inherit !important",
    // ".monaco-list *": "font-family: inherit !important",
    // ".monaco-tree *": "font-family: inherit !important",
    // ".quick-input-widget *": "font-family: inherit !important",
    // ".monaco-menu *": "font-family: inherit !important",
    // ".monaco-action-bar *": "font-family: inherit !important",
    // ".tabs-container *": "font-family: inherit !important",
    // ".monaco-breadcrumbs *": "font-family: inherit !important",
    // ".notifications-toasts *": "font-family: inherit !important",

    // blurry command platte
    ".quick-input-widget": "top: 25vh !important;",
    ".quick-input-widget::before": "content: ''; position: fixed; top: 0; left: 0; right: 0; bottom: 0; backdrop-filter: blur(8px) saturate(0.1); background: rgba(0, 0, 0, 0.2); z-index: -1; pointer-events: none",
    ".quick-input-header": "background: var(--vscode-quickInput-background);",


     // Vim mode indicator styling
    // ".statusbar-item[id*='vscodevim']": "border-radius: 4px !important; font-weight: bold !important; position: fixed !important; top: 20px !important; right: 20px !important; z-index: 9999 !important; background: rgba(255, 255, 255, 0.15) !important; backdrop-filter: blur(20px) saturate(1.8) !important; box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important; max-height: 40px"
    // Different colors for different modes
    // ".statusbar-item[id*='vscodevim'][title*='Normal']": "background: #007acc !important;",
    // ".statusbar-item[id*='vscodevim'][title*='Insert']": "background: #28a745 !important;",
    // ".statusbar-item[id*='vscodevim'][title*='Visual']": "background: #ffc107 !important; color: black !important;",
    // ".statusbar-item[id*='vscodevim'][title*='Command']": "background: #dc3545 !important;",
  },
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["K"],
      "commands": ["editor.action.showHover"]
    }
  ],
  "vim.useSystemClipboard": true,
  "vim.cursorStylePerMode.normal": "block",
  "vim.cursorStylePerMode.insert": "block",
  "vim.cursorStylePerMode.visual": "block",
  "vim.cursorStylePerMode.visualline": "block",
  "vim.cursorStylePerMode.visualblock": "block",
  "vim.cursorStylePerMode.replace": "block",
}
